{
  "url": "https://x6.antv.vision/zh/docs/tutorial/basic/scroller",
  "metadata": {
    "title": "滚动 Scroller | X6",
    "description": "JavaScript diagramming library",
    "keywords": [],
    "author": "",
    "publish_date": "",
    "domain": "x6.antv.vision"
  },
  "content": "[演示](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#演示 \"演示\")\n\n[选项](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#选项 \"选项\")\n\n[className](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#classname \"className\")\n\n[width](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#width \"width\")\n\n[height](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#height \"height\")\n\n[pannable](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#pannable \"pannable\")\n\n[modifiers](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#modifiers \"modifiers\")\n\n[cursor](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#cursor \"cursor\")\n\n[padding](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#padding \"padding\")\n\n[minVisibleWidth](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#minvisiblewidth \"minVisibleWidth\")\n\n[minVisibleHeight](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#minvisibleheight \"minVisibleHeight\")\n\n[pageVisible](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#pagevisible \"pageVisible\")\n\n[pageBreak](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#pagebreak \"pageBreak\")\n\n[pageWidth](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#pagewidth \"pageWidth\")\n\n[pageHeight](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#pageheight \"pageHeight\")\n\n[autoResize](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#autoresize \"autoResize\")\n\n[API](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#api \"API\")\n\n[graph.lockScroller()](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphlockscroller \"graph.lockScroller\\(\\)\")\n\n[graph.unlockScroller()](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphunlockscroller \"graph.unlockScroller\\(\\)\")\n\n[graph.getScrollbarPosition()](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphgetscrollbarposition \"graph.getScrollbarPosition\\(\\)\")\n\n[graph.setScrollbarPosition(left?: number, top?: number, options?: ScrollOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphsetscrollbarpositionleft-number-top-number-options-scrolloptions \"graph.setScrollbarPosition\\(left?: number, top?: number, options?: ScrollOptions\\)\")\n\n[graph.scrollToPoint(x?: number, y?: number, options?: ScrollOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphscrolltopointx-number-y-number-options-scrolloptions \"graph.scrollToPoint\\(x?: number, y?: number, options?: ScrollOptions\\)\")\n\n[graph.scrollToContent(options?: ScrollOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphscrolltocontentoptions-scrolloptions \"graph.scrollToContent\\(options?: ScrollOptions\\)\")\n\n[graph.scrollToCell(cell: Cell, options?: ScrollOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphscrolltocellcell-cell-options-scrolloptions \"graph.scrollToCell\\(cell: Cell, options?: ScrollOptions\\)\")\n\n[graph.center(options?: CenterOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphcenteroptions-centeroptions \"graph.center\\(options?: CenterOptions\\)\")\n\n[graph.centerPoint(x?: number | null, y?: number | null, options?: CenterOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphcenterpointx-number--null-y-number--null-options-centeroptions \"graph.centerPoint\\(x?: number | null, y?: number | null, options?: CenterOptions\\)\")\n\n[graph.centerContent(options?: PositionContentOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphcentercontentoptions-positioncontentoptions \"graph.centerContent\\(options?: PositionContentOptions\\)\")\n\n[centerCell(options?: CenterOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#centercelloptions-centeroptions \"centerCell\\(options?: CenterOptions\\)\")\n\n[positionContent(pos: Position, options?: PositionContentOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#positioncontentpos-position-options-positioncontentoptions \"positionContent\\(pos: Position, options?: PositionContentOptions\\)\")\n\n[positionCell(cell: Cell, pos: Scroller.Direction, options?: CenterOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#positioncellcell-cell-pos-scrollerdirection-options-centeroptions \"positionCell\\(cell: Cell, pos: Scroller.Direction, options?: CenterOptions\\)\")\n\n[positionRect(rect: Rectangle.RectangleLike, pos: Scroller.Direction, options?: CenterOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#positionrectrect-rectanglerectanglelike-pos-scrollerdirection-options-centeroptions \"positionRect\\(rect: Rectangle.RectangleLike, pos: Scroller.Direction, options?: CenterOptions\\)\")\n\n[positionPoint(point: Point.PointLike, x: number | string, y: number | string options: CenterOptions = {})](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#positionpointpoint-pointpointlike-x-number--string-y-number--string-options-centeroptions-- \"positionPoint\\(point: Point.PointLike, x: number | string, y: number | string options: CenterOptions = {}\\)\")\n\n[graph.zoom()](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphzoom \"graph.zoom\\(\\)\")\n\n[graph.zoom(factor: number, options?: ZoomOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphzoomfactor-number-options-zoomoptions \"graph.zoom\\(factor: number, options?: ZoomOptions\\)\")\n\n[graph.zoomToFit(options?: ScaleContentToFitOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphzoomtofitoptions-scalecontenttofitoptions \"graph.zoomToFit\\(options?: ScaleContentToFitOptions\\)\")\n\n[graph.zoomToRect(rect: Rectangle.RectangleLike, options?: ScaleContentToFitOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphzoomtorectrect-rectanglerectanglelike-options-scalecontenttofitoptions \"graph.zoomToRect\\(rect: Rectangle.RectangleLike, options?: ScaleContentToFitOptions\\)\")\n\n[graph.transitionToPoint(p: Point.PointLike, options?: TransitionOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphtransitiontopointp-pointpointlike-options-transitionoptions \"graph.transitionToPoint\\(p: Point.PointLike, options?: TransitionOptions\\)\")\n\n[graph.transitionToPoint(x: number, y: number, options?: TransitionOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphtransitiontopointx-number-y-number-options-transitionoptions \"graph.transitionToPoint\\(x: number, y: number, options?: TransitionOptions\\)\")\n\n[graph.transitionToRect(rect: Rectangle.RectangleLike, options？: TransitionToRectOptions)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphtransitiontorectrect-rectanglerectanglelike-options？-transitiontorectoptions \"graph.transitionToRect\\(rect: Rectangle.RectangleLike, options？: TransitionToRectOptions\\)\")\n\n[graph.isPannable()](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphispannable \"graph.isPannable\\(\\)\")\n\n[graph.enablePanning()](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphenablepanning \"graph.enablePanning\\(\\)\")\n\n[graph.disablePanning()](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphdisablepanning \"graph.disablePanning\\(\\)\")\n\n[graph.togglePanning(pannable?: boolean)](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphtogglepanningpannable-boolean \"graph.togglePanning\\(pannable?: boolean\\)\")\n\n# 滚动 Scroller\n\n阅读时间约 8 分钟\n\nScroller 使画布具备滚动、平移、居中、缩放等能力，创建画布时，通过下面配置即可开启。\n    \n    \n    const graph = new Graph({\n      scroller: true,\n    })\n    \n    // 等同于\n    const graph = new Graph({\n      scroller: {\n        enabled: true,\n      },\n    })\n\n## 演示\n\n## 选项\n    \n    \n    interface ScrollerOptions {\n      enabled?: boolean\n      pannable?: boolean\n      className?: string\n      width?: number\n      height?: number\n      modifiers?: string | ('alt' | 'ctrl' | 'meta' | 'shift')[] | null\n      cursor?: string\n      pageWidth?: number\n      pageHeight?: number\n      pageVisible?: boolean\n      pageBreak?: boolean\n      autoResize?: boolean\n      minVisibleWidth?: number\n      minVisibleHeight?: number\n      padding?: number | { top: number; right: number; bottom: number; left: number}\n      background?: false | BackgroundOptions\n    }\n\n### className\n\n附加样式名，用于定制样式。默认为 `undefined`。\n    \n    \n    const graph = new Graph({\n      scroller: {\n        enabled: true,\n        className: 'my-scroller',\n      },\n    })\n\n### width\n\nScroller 的宽度，默认为画布容器宽度。\n\n### height\n\nScroller 的高度，默认为画布容器高度。\n\n### pannable\n\n是否启用画布平移能力（在空白位置按下鼠标后拖动平移画布），默认为 `false`。\n    \n    \n    const graph = new Graph({\n      scroller: {\n        enabled: true,\n        pannable: true,\n      },\n    })\n\n创建画布后，也可以调用 [graph.enablePanning()](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphenablepanning) 和 [graph.disablePanning()](https://x6.antv.vision/zh/docs/tutorial/basic/scroller#graphdisablepanning) 来启用和禁用画布平移。\n    \n    \n    if (graph.isPannable()) {\n      graph.disablePanning()\n    } else {\n      graph.enablePanning()\n    }\n\n如果需要支持右键拖拽，使用方法如下：\n    \n    \n    const graph = new Graph({\n      scroller: {\n        enabled: true,\n        pannable: {\n          enabled: true,\n          // 默认情况下只支持左键平移\n          eventTypes: ['leftMouseDown', 'rightMouseDown']\n        },\n      },\n    })\n\n### modifiers\n\n修饰键(`'alt'`、`'ctrl'`、`'meta'`、`'shift'`)，设置修饰键后需要点击鼠标并按下修饰键才能触发画布拖拽。修饰键在某些场景下非常有用，比如同时开始框选和拖拽画布时，而框选和拖拽画布的触发时机都是鼠标左键在画布空白位置按下，这时可以为框选和拖拽画布设置不一样的修饰键，达到同时开启又不冲突的效果。\n\n支持配置单个（如 `'alt'`）或多个（如 `['alt', 'ctrl']`）修饰键，通过数组形式配置的多个修饰键是 _或关系_ ，比如刚刚配置的修饰键表示按下 `'alt'` 或 `'ctrl'`，如果需要更加灵活的配置，可以使用如下这些形式：\n\n  * `'alt|ctrl'` 表示按下 `'alt'` 或 `'ctrl'`。\n  * `'alt&ctrl'` 表示同时按下 `'alt'` 和 `'ctrl'`。\n  * `'alt|ctrl&shift'` 表示同时按下 `'alt'` 和 `'shift'` 或者同时按下 `'ctrl'` 和 `'shift'`。\n\n\n\n### cursor\n\n画布鼠标样式，默认为空。\n\n当 `cursor` 为空并开启拖拽时，将自动为画布设置 `grab` 鼠标样式。\n\n### padding\n\n设置画布四周的 padding 边距。默认根据 `minVisibleWidth` 和 `minVisibleHeight` [自动计算](https://github.com/antvis/X6/blob/master/packages/x6/src/addon/scroller/index.ts#L1081-L1088)得到，保证画布滚动时，在宽度和高度方向至少有 `minVisibleWidth` 和 `minVisibleHeight` 大小的画布可见。 \n\n### minVisibleWidth\n\n当 `padding` 为空时有效，设置画布滚动时画布的最小可见宽度。\n\n### minVisibleHeight\n\n当 `padding` 为空时有效，设置画布滚动时画布的最小可见高度。\n\n### pageVisible\n\n是否分页，默认为 `false`。\n\n### pageBreak\n\n是否显示分页符，默认为 `false`。\n\n### pageWidth\n\n每一页的宽度，默认为画布容器宽度。\n\n### pageHeight\n\n每一页的高度，默认为画布容器高度。\n\n### autoResize\n\n是否自动扩充/缩小画布，默认为 `true`。开启后，移动节点/边时将自动计算需要的画布大小，当超出当前画布大小时，按照 `pageWidth` 和 `pageHeight` 自动扩充画布。反之，则自动缩小画布。\n\n## API\n\n### graph.lockScroller()\n\n禁止滚动。\n\n### graph.unlockScroller()\n\n启用滚动。\n\n### graph.getScrollbarPosition()\n\n获取滚动条位置。\n\n### graph.setScrollbarPosition(left?: number, top?: number, options?: ScrollOptions)\n\n设置滚动条位置。\n\n  * `left?: number` 水平滚动条的位置，缺省时表示水平方向不滚动。\n  * `top?: number` 垂直滚动条的位置，缺省时表示垂直方向不滚动。\n  * `options?: ScrollOptions` 选项。\n        \n        interface ScrollOptions {\n          // JQuery 动画配置\n          animation?: JQuery.EffectsOptions<HTMLElement>\n        }\n\n\n\n\n例如：\n    \n    \n    graph.setScrollbarPosition(100) \n    graph.setScrollbarPosition(100, null) \n    graph.setScrollbarPosition(null, 200) \n    graph.setScrollbarPosition(100, 200) \n    \n    // 使用动画\n    graph.setScrollbarPosition(100, null, { animation: { duration: 200, easing: 'linear' }})      \n    graph.setScrollbarPosition(null, 200, { animation: { duration: 600 }}) \n    graph.setScrollbarPosition(100, 200,  { animation: { duration: 400 }})\n\n### graph.scrollToPoint(x?: number, y?: number, options?: ScrollOptions)\n\n将 `x` 和 `y` 指定的点（相对于画布）滚动到视口中心，如果只指定了其中一个方向，则只滚动对应的方向。\n\n该方法将尽量滚动画布，使指定的点位于视口中心，这意味着滚动后指定的点不一定位于视口中心，如指定的点位于画布的角落。\n\n  * `x` 相对一画布的 x 轴坐标。\n  * `y` 相对一画布的 y 轴坐标。\n  * `options?: ScrollOptions` 选项。\n        \n        interface ScrollOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n        }\n\n\n\n\n例如： \n    \n    \n    graph.scrollToPoint(100, 200)  // 滚动到 [100, 200]\n    graph.scrollToPoint(100)       // 滚动到 [100, null]\n    graph.scrollToPoint(null, 200) // 滚动到 [null, 200]\n    \n    // 支持动画\n    graph.scrollToPoint(100, 200,  { animation: { duration: 400 }})\n    graph.scrollToPoint(100, null, { animation: { duration: 200, easing: 'linear' }})      \n    graph.scrollToPoint(null, 200, { animation: { duration: 600 }}) \n\n### graph.scrollToContent(options?: ScrollOptions)\n\n滚动画布，使画布的内容中心位于画布的视口中心。\n\n该方法将尽量滚动画布，使画布的内容中心位于画布的视口中心，这意味着滚动后内容中心不一定位于视口中心。\n\n  * `options?: ScrollOptions` 选项。\n        \n        interface ScrollOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n        }\n\n\n\n\n例如： \n    \n    \n    graph.scrollToContent()\n    graph.scrollToContent({ animation: { duration: 600 }})\n\n### graph.scrollToCell(cell: Cell, options?: ScrollOptions)\n\n滚动画布，使节点/边的中心位于画布的视口中心。\n\n该方法将尽量滚动画布，使节点/边的中心位于视口中心，这意味着滚动后节点/边的中心不一定位于视口中心，如指定的节点/边位于画布的角落。\n\n  * `options?: ScrollOptions` 选项。\n        \n        interface ScrollOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n        }\n\n\n\n\n例如： \n    \n    \n    graph.scrollToCell(cell)\n    graph.scrollToCell(cell, { animation: { duration: 600 }})\n\n### graph.center(options?: CenterOptions)\n\n将画布中心与视口中心对齐。如果不能通过滚动来对齐，则自动为 Scroller 的容器增加一定的 `padding` 边距来强制对齐。\n\n  * `options?: CenterOptions` 选项。\n        \n        interface CenterOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n          /**\n           * 自定义边距\n           */ \n          padding?: number | {\n            left?: number\n            top?: number\n            right?: number\n            bottom?: number\n          }\n        }\n\n\n\n\n### graph.centerPoint(x?: number | null, y?: number | null, options?: CenterOptions)\n\n将 `x` 和 `y` 指定的点（相对于画布）与视口中心对齐。如果不能通过滚动来对齐，则自动为 Scroller 的容器增加一定的 `padding` 边距来强制对齐。\n\n  * `options?: CenterOptions` 选项。\n        \n        interface CenterOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n          /**\n           * 自定义边距\n           */ \n          padding?: number | {\n            left?: number\n            top?: number\n            right?: number\n            bottom?: number\n          }\n        }\n\n\n\n\n例如：\n    \n    \n    graph.centerPoint(100, 200)\n    graph.centerPoint(100, null, { padding: { left: 100 }})\n    graph.centerPoint(null, 200, { padding: { left: 100 }})\n\n### graph.centerContent(options?: PositionContentOptions)\n\n将画布内容中心与视口中心对齐。如果不能通过滚动来对齐，则自动为 Scroller 的容器增加一定的 `padding` 边距来强制对齐。\n\n  * `options?: PositionContentOptions` 选项。\n        \n        interface PositionContentOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n          /**\n           * 自定义边距\n           */ \n          padding?: number | {\n            left?: number\n            top?: number\n            right?: number\n            bottom?: number\n          }\n          useCellGeometry?: boolean\n        }\n\n\n\n\n例如：\n    \n    \n    graph.centerContent()\n    graph.centerContent({ padding: { left: 100 }})\n\n### centerCell(options?: CenterOptions)\n\n将节点/边的中心与视口中心对齐。如果不能通过滚动来对齐，则自动为 Scroller 的容器增加一定的 `padding` 边距来强制对齐。\n\n  * `options?: CenterOptions` 选项。\n        \n        interface CenterOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n          /**\n           * 自定义边距\n           */ \n          padding?: number | {\n            left?: number\n            top?: number\n            right?: number\n            bottom?: number\n          }\n        }\n\n\n\n\n例如：\n    \n    \n    graph.centerCell(cell)\n    graph.centerCell(cell, { padding: { left: 100 }})\n\n### positionContent(pos: Position, options?: PositionContentOptions)\n\n将 `pos` 代表的画布内容 BBox 位置与对应的画布视口位置对齐。如 `pos` 为 `'bottom-left'` 时，表示将画布内容的左下角与视口的左下角对齐。\n\n  * `pos: Position` 对齐的位置。\n        \n        type Position =     \n          | 'center'\n          | 'top'\n          | 'top-right'\n          | 'top-left'\n          | 'right'\n          | 'bottom-right'\n          | 'bottom'\n          | 'bottom-left'\n          | 'left'\n\n  * `options?: PositionContentOptions` 对齐选项。\n        \n        interface PositionContentOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n          /**\n           * 自定义边距\n           */ \n          padding?: number | {\n            left?: number\n            top?: number\n            right?: number\n            bottom?: number\n          }\n          useCellGeometry?: boolean\n        }\n\n\n\n\n### positionCell(cell: Cell, pos: Scroller.Direction, options?: CenterOptions)\n\n将 `pos` 代表的节点/边 BBox 位置与对应的画布视口位置对齐。如 `pos` 为 `'bottom-left'` 时，表示将节点/边的左下角与视口的左下角对齐。\n\n  * `cell: Cell` 被对齐的节点。\n  * `pos: Position` 对齐的位置。\n        \n        type Position =     \n          | 'center'\n          | 'top'\n          | 'top-right'\n          | 'top-left'\n          | 'right'\n          | 'bottom-right'\n          | 'bottom'\n          | 'bottom-left'\n          | 'left'\n\n  * `options?: CenterOptions` 对齐选项。\n        \n        interface CenterOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n          /**\n           * 自定义边距\n           */ \n          padding?: number | {\n            left?: number\n            top?: number\n            right?: number\n            bottom?: number\n          }\n        }\n\n\n\n\n### positionRect(rect: Rectangle.RectangleLike, pos: Scroller.Direction, options?: CenterOptions)\n\n将 `pos` 代表的矩形位置与对应的画布视口位置对齐。如 `pos` 为 `'bottom-left'` 时，表示将矩形的左下角与视口的左下角对齐。\n\n  * `rect: Rectangle.RectangleLike` 被对齐的矩形。\n  * `pos: Position` 对齐的位置。\n        \n        type Position =     \n          | 'center'\n          | 'top'\n          | 'top-right'\n          | 'top-left'\n          | 'right'\n          | 'bottom-right'\n          | 'bottom'\n          | 'bottom-left'\n          | 'left'\n\n  * `options?: CenterOptions` 对齐选项。\n        \n        interface CenterOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n          /**\n           * 自定义边距\n           */ \n          padding?: number | {\n            left?: number\n            top?: number\n            right?: number\n            bottom?: number\n          }\n        }\n\n\n\n\n### positionPoint(point: Point.PointLike, x: number | string, y: number | string options: CenterOptions = {})\n\n将 `point` 指定的点（相对于画布）与 `x` 和 `y` 代表的画布视口位置对齐。\n\n  * `point: Point.PointLike` 被对齐的点，相对于画布\n  * `x: number | string` 视口 x 位置，支持百分比和负值\n  * `y: number | string` 视口 y 位置，支持百分比和负值\n  * `options?: CenterOptions` 对齐选项。\n        \n        interface CenterOptions {\n          /**\n           * JQuery 动画\n           */ \n          animation?: JQuery.EffectsOptions<HTMLElement>\n          /**\n           * 自定义边距\n           */ \n          padding?: number | {\n            left?: number\n            top?: number\n            right?: number\n            bottom?: number\n          }\n        }\n\n\n\n\n例如：\n    \n    \n    // 将画布的左上角与视口中的点 [100, 50] 对齐\n    graph.positionPoint({ x: 0, y: 0 }, 100, 50)\n    \n    // 将画布上的点 { x: 30, y: 80 } 与离视口左侧 25% 和离视口底部 40px 的位置对齐\n    graph.positionPoint({ x: 30, y: 80 }, '25%', -40)\n    \n    // 将画布上的点 { x: 30, y: 80 } 与离视口右侧 25% 和离视口顶部 40px 的位置对齐\n    graph.positionPoint({ x: 30, y: 80 }, '-25%', 40)\n\n### graph.zoom()\n\n获取画布缩放比例。\n\n### graph.zoom(factor: number, options?: ZoomOptions)\n\n缩放画布。当 `options.absolute` 为 `true` 时，表示将画布缩放到 `factor` 代表的值，否则 `factor` 表示放大/缩小的因子，当 `factor` 为正数时表示画布放大画布，当 `factor` 为负数时表示缩小画布。\n\n  * `factor: number` 缩放比例。\n  * `options?: ZoomOptions` 缩放选项。\n        \n        interface ZoomOptions {\n          absolute?: boolean\n          minScale?: number\n          maxScale?: number\n          scaleGrid?: number\n          center?: Point.PointLike\n        }\n\n    * `absolute?: boolean` 是否为绝对缩放，默认为 `false`。\n    * `center?: Point.PointLike` 缩放中心。\n    * `minScale?: number` 最小缩放比例。\n    * `maxScale?: number` 最大缩放比例。\n    * `scaleGrid?: number` 修正缩放比例为 `scaleGrid` 的整倍数。\n\n\n\n例如：\n    \n    \n    graph.zoom(0.2, {\n      minScale: 0.2,\n      maxScale: 5,\n      scaleGrid: 0.5,\n    })\n\n### graph.zoomToFit(options?: ScaleContentToFitOptions)\n\n缩放画布内容，使画布内容充满视口。\n\n### graph.zoomToRect(rect: Rectangle.RectangleLike, options?: ScaleContentToFitOptions)\n\n缩放和平移画布，使 `rect` 表示的矩形区域（相对于画布坐标）充满视口。\n\n### graph.transitionToPoint(p: Point.PointLike, options?: TransitionOptions)\n\n### graph.transitionToPoint(x: number, y: number, options?: TransitionOptions)\n\n使用动画平移画布，将画布上指定点（相对于画布的坐标）与视口中心对齐。\n\n  * `x: number` 相对于画布的 x 坐标。\n  * `y: number` 相对于画布的 y 坐标。\n  * `options?: TransitionOptions` 动画选项。\n        \n        interface TransitionOptions {\n            scale?: number\n            duration?: string\n            delay?: string\n            timing?: string\n            onTransitionEnd?: (this: Scroller, e: TransitionEvent) => void\n        }\n\n    * `scale?: number` 目标缩放比例，设置后同时伴随着缩放动画。\n    * `duration?: string` 动画持续的时长，如 `'500ms'` 或 `'2s'`。默认为 `'1s'`。\n    * `delay?: string` 动画延迟多长时间后开始，默认为 `0`。\n    * `timing?: string` 插值方法名，默认为 `'ease'`。支持的方法名[参考这里](https://github.com/antvis/X6/blob/master/packages/x6/src/common/animation/timing.ts)。\n    * `onTransitionEnd?: (this: Scroller, e: TransitionEvent) => void` 动画结束时的回调。\n\n\n\n例如：\n    \n    \n    // 平移画布，将点 { x: 100, y: 80 } 移动到视口中心\n    graph.transitionToPoint(100, 80)\n    \n    // 平移和缩放画布，将点 { x: 100, y: 80 } 移动到视口中心，同时将画布放大 2 倍。\n    graph.transitionToPoint(100, 80, { scale: 2 })\n\n### graph.transitionToRect(rect: Rectangle.RectangleLike, options？: TransitionToRectOptions)\n\n使用动画缩放和平移画布，使指定的矩形（相对于画布的坐标）充满视口。\n\n  * `rect: Rectangle.RectangleLike` 目标矩形区域。\n  * `options？: TransitionToRectOptions` 动画选项。\n        \n        interface TransitionToRectOptions {\n          minScale?: number\n          maxScale?: number\n          scaleGrid?: number\n          visibility?: number\n          center?: Point.PointLike\n          duration?: string\n          delay?: string\n          timing?: string\n          onTransitionEnd?: (this: Scroller, e: TransitionEvent) => void\n        }\n\n    * `minScale?: number` 画布的最小缩放比例。\n    * `maxScale?: number` 画布的最大缩放比例。\n    * `scaleGrid?: number` 修正缩放比例为 `scaleGrid` 的整倍数。\n    * `center?: Point.PointLike` 同时将指定的点移动到视口中心。\n    * `visibility?: number` 矩形区域覆盖视口的比例，取值范围 [0, 1]，默认为 `1`，表示完全覆盖。如，取值为 `0.8` 时表示矩形覆盖 80% 视口区域。\n    * `duration?: string` 动画持续的时长，如 `'500ms'` 或 `'2s'`。默认为 `'1s'`。\n    * `delay?: string` 动画延迟多长时间后开始，默认为 `0`。\n    * `timing?: string` 插值方法名，默认为 `'ease'`。支持的方法名[参考这里](https://github.com/antvis/X6/blob/master/packages/x6/src/common/animation/timing.ts)。\n    * `onTransitionEnd?: (this: Scroller, e: TransitionEvent) => void` 动画结束时的回调。\n\n\n\n例如：\n    \n    \n    graph.transitionToRect({\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 200,\n    }, {\n        visibility: 0.9, // 矩形覆盖 90% 视口区域\n        maxScale: 3,     // 画布最大缩放比例为 3 \n    })\n    \n    // 使 cell1, cell2, cell3 三个节点的包围盒 BBox 完全位于视口，并将 cell1 移动到视口中心\n    const rect = graph.getCellsBBox([cell1, cell2, cell3]);\n    graph.transitionToRect(rect, {\n        duration: '500ms',\n        center: cell1.getBBox().center()\n    });\n\n### graph.isPannable()\n\n返回画布是否可被平移。\n\n### graph.enablePanning()\n\n启用画布平移。\n\n### graph.disablePanning()\n\n禁用画布平移。\n\n### graph.togglePanning(pannable?: boolean)\n\n切换或设置画布平移。\n\n  * `pannable?: boolean` 是否启用画布平移。\n\n\n    \n    \n    // 切换画布平移\n    graph.togglePanning()\n    \n    // 启用画布平移\n    graph.enablePanning() \n    // 或\n    graph.togglePanning(true)\n    \n    // 禁用画布平移\n    graph.disablePanning()\n    // 或\n    graph.togglePanning(false)\n\n  * [画布 Graph](https://x6.antv.vision/zh/docs/tutorial/basic/graph)\n  * [基类 Cell](https://x6.antv.vision/zh/docs/tutorial/basic/cell)\n  * [节点 Node](https://x6.antv.vision/zh/docs/tutorial/basic/node)\n  * [边 Edge](https://x6.antv.vision/zh/docs/tutorial/basic/edge)\n  * [群组 Group](https://x6.antv.vision/zh/docs/tutorial/basic/group)\n  * [连接桩 Port](https://x6.antv.vision/zh/docs/tutorial/basic/port)\n  * [网格 Grid](https://x6.antv.vision/zh/docs/tutorial/basic/grid)\n  * [背景 Background](https://x6.antv.vision/zh/docs/tutorial/basic/background)\n  * [剪切板 Clipboard](https://x6.antv.vision/zh/docs/tutorial/basic/clipboard)\n  * [撤销/重做 Undo/Redo](https://x6.antv.vision/zh/docs/tutorial/basic/history)\n  * [点选/框选 Selection](https://x6.antv.vision/zh/docs/tutorial/basic/selection)\n  * [对齐线 Snapline](https://x6.antv.vision/zh/docs/tutorial/basic/snapline)\n  * [滚动 Scroller](https://x6.antv.vision/zh/docs/tutorial/basic/scroller)\n  * [小地图 MiniMap](https://x6.antv.vision/zh/docs/tutorial/basic/minimap)\n  * [拖拽 Dnd](https://x6.antv.vision/zh/docs/tutorial/basic/dnd)\n  * [键盘快捷键 Keyboard](https://x6.antv.vision/zh/docs/tutorial/basic/keyboard)\n  * [滚轮缩放 MouseWheel](https://x6.antv.vision/zh/docs/tutorial/basic/mousewheel)\n  * [节点和边的交互](https://x6.antv.vision/zh/docs/tutorial/basic/interacting)\n\n\n\n  * [序列化/反序列化](https://x6.antv.vision/zh/docs/tutorial/intermediate/serialization)\n  * [事件系统](https://x6.antv.vision/zh/docs/tutorial/intermediate/events)\n  * [特殊属性](https://x6.antv.vision/zh/docs/tutorial/intermediate/attrs)\n  * [自定义节点](https://x6.antv.vision/zh/docs/tutorial/intermediate/custom-node)\n  * [自定义边](https://x6.antv.vision/zh/docs/tutorial/intermediate/custom-edge)\n  * [使用标签 Labels](https://x6.antv.vision/zh/docs/tutorial/intermediate/edge-labels)\n  * [使用箭头 Marker](https://x6.antv.vision/zh/docs/tutorial/intermediate/marker)\n  * [使用工具 Tools](https://x6.antv.vision/zh/docs/tutorial/intermediate/tools)\n\n\n\n  * [使用动画](https://x6.antv.vision/zh/docs/tutorial/advanced/animation)\n  * [使用 HTML/React/Vue/Angular 渲染](https://x6.antv.vision/zh/docs/tutorial/advanced/react)\n  * [使用 UI 组件](https://x6.antv.vision/zh/docs/tutorial/advanced/components)\n  * [使用布局](https://x6.antv.vision/zh/docs/tutorial/advanced/layout)\n\n\n\n  * [简介](https://x6.antv.vision/zh/docs/tutorial/about)\n  * [快速上手](https://x6.antv.vision/zh/docs/tutorial/getting-started)\n  * 基础教程 __\n\n    * [画布 Graph](https://x6.antv.vision/zh/docs/tutorial/basic/graph)\n    * [基类 Cell](https://x6.antv.vision/zh/docs/tutorial/basic/cell)\n    * [节点 Node](https://x6.antv.vision/zh/docs/tutorial/basic/node)\n    * [边 Edge](https://x6.antv.vision/zh/docs/tutorial/basic/edge)\n    * [群组 Group](https://x6.antv.vision/zh/docs/tutorial/basic/group)\n    * [连接桩 Port](https://x6.antv.vision/zh/docs/tutorial/basic/port)\n    * [网格 Grid](https://x6.antv.vision/zh/docs/tutorial/basic/grid)\n    * [背景 Background](https://x6.antv.vision/zh/docs/tutorial/basic/background)\n    * [剪切板 Clipboard](https://x6.antv.vision/zh/docs/tutorial/basic/clipboard)\n    * [撤销/重做 Undo/Redo](https://x6.antv.vision/zh/docs/tutorial/basic/history)\n    * [点选/框选 Selection](https://x6.antv.vision/zh/docs/tutorial/basic/selection)\n    * [对齐线 Snapline](https://x6.antv.vision/zh/docs/tutorial/basic/snapline)\n    * [滚动 Scroller](https://x6.antv.vision/zh/docs/tutorial/basic/scroller)\n    * [小地图 MiniMap](https://x6.antv.vision/zh/docs/tutorial/basic/minimap)\n    * [拖拽 Dnd](https://x6.antv.vision/zh/docs/tutorial/basic/dnd)\n    * [键盘快捷键 Keyboard](https://x6.antv.vision/zh/docs/tutorial/basic/keyboard)\n    * [滚轮缩放 MouseWheel](https://x6.antv.vision/zh/docs/tutorial/basic/mousewheel)\n    * [节点和边的交互](https://x6.antv.vision/zh/docs/tutorial/basic/interacting)\n  * 进阶实践 __\n\n    * [序列化/反序列化](https://x6.antv.vision/zh/docs/tutorial/intermediate/serialization)\n    * [事件系统](https://x6.antv.vision/zh/docs/tutorial/intermediate/events)\n    * [特殊属性](https://x6.antv.vision/zh/docs/tutorial/intermediate/attrs)\n    * [自定义节点](https://x6.antv.vision/zh/docs/tutorial/intermediate/custom-node)\n    * [自定义边](https://x6.antv.vision/zh/docs/tutorial/intermediate/custom-edge)\n    * [使用标签 Labels](https://x6.antv.vision/zh/docs/tutorial/intermediate/edge-labels)\n    * [使用箭头 Marker](https://x6.antv.vision/zh/docs/tutorial/intermediate/marker)\n    * [使用工具 Tools](https://x6.antv.vision/zh/docs/tutorial/intermediate/tools)\n  * 高级指引 __\n\n    * [使用动画](https://x6.antv.vision/zh/docs/tutorial/advanced/animation)\n    * [使用 HTML/React/Vue/Angular 渲染](https://x6.antv.vision/zh/docs/tutorial/advanced/react)\n    * [使用 UI 组件](https://x6.antv.vision/zh/docs/tutorial/advanced/components)\n    * [使用布局](https://x6.antv.vision/zh/docs/tutorial/advanced/layout)\n  * [联系我们](https://x6.antv.vision/zh/docs/tutorial/contact)\n\n\n\n🇨🇳AntV 系列网站部署在 gh-pages 上，若访问速度不佳，可以前往 站点。\n\n不再提醒立即前往\n"
}
