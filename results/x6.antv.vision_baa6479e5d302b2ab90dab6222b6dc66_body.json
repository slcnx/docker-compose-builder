{
  "url": "https://x6.antv.vision/zh/docs/api/registry/node-tool",
  "metadata": {
    "title": "NodeTool | X6",
    "description": "JavaScript diagramming library",
    "keywords": [],
    "author": "",
    "publish_date": "",
    "domain": "x6.antv.vision"
  },
  "content": "[presets](https://x6.antv.vision/zh/docs/api/registry/node-tool#presets \"presets\")\n\n[button](https://x6.antv.vision/zh/docs/api/registry/node-tool#button \"button\")\n\n[button-remove](https://x6.antv.vision/zh/docs/api/registry/node-tool#button-remove \"button-remove\")\n\n[boundary](https://x6.antv.vision/zh/docs/api/registry/node-tool#boundary \"boundary\")\n\n[node-editor](https://x6.antv.vision/zh/docs/api/registry/node-tool#node-editor \"node-editor\")\n\n[registry](https://x6.antv.vision/zh/docs/api/registry/node-tool#registry \"registry\")\n\n[register](https://x6.antv.vision/zh/docs/api/registry/node-tool#register \"register\")\n\n[unregister](https://x6.antv.vision/zh/docs/api/registry/node-tool#unregister \"unregister\")\n\n[自定义工具](https://x6.antv.vision/zh/docs/api/registry/node-tool#自定义工具 \"自定义工具\")\n\n# NodeTool\n\n阅读时间约 5 分钟\n\n节点小工具是一些渲染在节点上的一些小组件，这些小工具通常都附带一些交互功能，如删除按钮，点击按钮时删除对应的节点。我们可以根据下面的一些场景来添加或删除小工具。\n\n场景一：添加指定的小工具。\n    \n    \n    // 创建节点时添加小工具\n    graph.addNode({\n      ...,\n      tools: [\n        {\n          name: 'button-remove',\n          args: { x: 10, y: 10 },\n        },\n      ],\n    })\n    \n    // 创建节点后添加小工具\n    node.addTools([\n      {\n        name: 'button-remove',\n        args: { x: 10, y: 10 },\n      },\n    ])\n\n场景二：动态添加/删除小工具。\n    \n    \n    graph.on('node:mouseenter', ({ node }) => {\n      node.addTools(\n        [\n          {\n            name: 'button-remove',\n             args: { x: 10, y: 10 },\n          },\n        ],\n      )\n    })\n    \n    graph.on('node:mouseleave', ({ node }) => {\n      if (node.hasTool('button-remove')) {\n        node.removeTool('button-remove')\n      }\n    })\n\n在 X6 中默认提供了以下几个用于节点的小工具：\n\n  * [button](https://x6.antv.vision/zh/docs/api/registry/node-tool#button) 在指定位置处渲染一个按钮，支持自定义按钮的点击交互。\n  * [button-remove](https://x6.antv.vision/zh/docs/api/registry/node-tool#button-remove) 在指定的位置处，渲染一个删除按钮，点击时删除对应的节点。\n  * [boundary](https://x6.antv.vision/zh/docs/api/registry/node-tool#boundary) 根据节点的包围盒渲染一个包围节点的矩形。注意，该工具仅仅渲染一个矩形，不带任何交互。\n  * [node-editor](https://x6.antv.vision/zh/docs/api/registry/node-tool#node-editor) 提供节点文本编辑功能。\n\n\n\n## presets\n\n### button\n\n在指定位置处渲染一个按钮，支持自定义按钮的点击交互。\n\n参数\n\n参数名| 类型| 默认值| 说明  \n---|---|---|---  \nx| number | string| `0`| 相对于节点的左上角 X 轴的坐标，小数和百分比表示相对位置。  \ny| number | string| `0`| 相对于节点的左上角 Y 轴的坐标，小数和百分比表示相对位置。  \noffset| number | { x: number, y: number }| `0`| 在 `x` 和 `y` 基础上的偏移量。  \nrotate| boolean| `undefined`| 是否跟随节点旋转。  \nmarkup| Markup.JSONMarkup| `undefined`| 渲染按钮的 Markup 定义。  \nonClick| (args: {e: JQuery.MouseDownEvent, cell: Cell, view: CellView }) => void| `undefined`| 点击按钮的回调函数。  \n  \n使用\n    \n    \n    const source = graph.addNode({\n      ...,\n      // 添加一个始终显示的按钮\n      tools: [\n        {\n          name: 'button',\n          args: {\n            markup: ...,\n            x: '100%',\n            y: '100%',\n            offset: { x: -18, y: -18 },\n            onClick({ view }) { ... },\n          },\n        },\n      ],\n    })\n    \n    // ...\n    \n    // 鼠标 Hover 时添加按钮\n    graph.on('node:mouseenter', ({ node }) => {\n      if (node === target) {\n        node.addTools({\n          name: 'button',\n          args: {\n            markup: ...,\n            x: 0,\n            y: 0,\n            offset: { x: 18, y: 18 },\n            onClick({ view }) { ... },\n          },\n        })\n      }\n    })\n    \n    // 鼠标移开时删除按钮\n    graph.on('node:mouseleave', ({ node }) => {\n      if (node === target) {\n        node.removeTools()\n      }\n    })\n\n### button-remove\n\n在指定的位置处，渲染一个删除按钮，点击时删除对应的节点。\n\n参数\n\n参数名| 类型| 默认值| 说明  \n---|---|---|---  \nx| number | string| `0`| 相对于节点的左上角 X 轴的坐标，小数和百分比表示相对位置。  \ny| number | string| `0`| 相对于节点的左上角 Y 轴的坐标，小数和百分比表示相对位置。  \noffset| number | { x: number, y: number }| `0`| 在 `distance` 基础上的偏移量。  \nrotate| boolean| `undefined`| 是否跟随边旋转。  \nmarkup| Markup.JSONMarkup| `undefined`| 渲染按钮的 Markup 定义。  \nonClick| (args: {e: JQuery.MouseDownEvent, cell: Cell, view: CellView }) => void| `undefined`| 点击按钮的回调函数。  \n  \n使用\n    \n    \n    const source = graph.addNode({\n      ...,\n      // 添加一个始终显示的删除按钮\n      tools: [\n        {\n          name: 'button-remove',\n          args: {\n            x: '100%',\n            y: 0,\n            offset: { x: -10, y: 10 },\n          },\n        },\n      ],\n    })\n    \n    // 鼠标 Hover 时添加删除按钮\n    graph.on('node:mouseenter', ({ node }) => {\n      if (node === target) {\n        node.addTools({\n          name: 'button-remove',\n          args: {\n            x: 0,\n            y: 0,\n            offset: { x: 10, y: 10 },\n          },\n        })\n      }\n    })\n    \n    // 鼠标移开时删除删除按钮\n    graph.on('node:mouseleave', ({ node }) => {\n      if (node === target) {\n        node.removeTools()\n      }\n    })\n\n### boundary\n\n根据节点的包围盒渲染一个包围节点的矩形。注意，该工具仅仅渲染一个矩形，不带任何交互。\n\n参数\n\n参数名| 类型| 默认值| 说明  \n---|---|---|---  \ntagName| string| `rect`| 使用何种图形渲染。  \npadding| number| `10`| 边距。  \nattrs| KeyValue| `object`| 图形属性。  \n  \n其中 `attrs` 的默认值(默认样式)为：\n    \n    \n    {\n      fill: 'none',\n      stroke: '#333',\n      'stroke-width': 0.5,\n      'stroke-dasharray': '5, 5',\n      'pointer-events': 'none',\n    }\n\n使用\n    \n    \n    const source = graph.addNode({\n      ...,\n      tools: [\n        {\n          name: 'boundary',\n          args: {\n            padding: 5,\n            attrs: {\n              fill: '#7c68fc',\n              stroke: '#333',\n              'stroke-width': 1,\n              'fill-opacity': 0.2,\n            },\n          },\n        },\n      ],\n    })\n\n### node-editor\n\n提供节点上文本编辑功能。\n\n参数\n\n参数名| 类型| 默认值| 说明  \n---|---|---|---  \nevent| JQuery.MouseEventBase| -| 触发文本编辑的事件参数  \nattrs/fontSize| string| `14`| 编辑文本字体大小  \nattrs/color| string| `#000`| 编辑文本字体颜色  \nattrs/fontFamily| string| `Arial, helvetica, sans-serif`| 编辑文本的字体  \nattrs/backgroundColor| string| `#fff`| 编辑区域的背景色  \ngetText| (this: CellView, args: {cell: Cell}) => string| -| 获取原文本方法，在自定义 `markup` 场景需要自定义 `getText` 方法  \nsetText| (this: CellView, args: {cell: Cell, value: string}) => void| -| 设置新文本，在自定义 `markup` 场景需要自定义 `setText` 方法  \n  \n使用\n    \n    \n    // 双击进入编辑模式\n    graph.on('node:dblclick', ({ node, e }) => {\n      node.addTools({\n        name: 'node-editor',\n        args: {\n          event: e,\n        },\n      })\n    })\n\n## registry\n\n我们在 Registry.NodeTool.registry 对象上提供了注册和取消注册工具的方法，工具实际上是一个继承自 ToolItem 的[视图](https://x6.antv.vision/zh/docs/api/view/view)。\n    \n    \n    export type Definition = typeof ToolItem | (new (options: ToolItem.Options) => ToolItem)\n\n例如，上面提到的 `'button'` 工具的对应的定义为\n    \n    \n    export class Button extends ToolsView.ToolItem<EdgeView | NodeView, Button.Options> {\n      protected onRender() { ... }\n      protected onMouseDown() { ... }\n    }\n\n创建工具类之后就可以使用下面的 `register` 方法来注册到系统中。\n\n### register\n    \n    \n    register(entities: { [name: string]: Definition }, force?: boolean): void\n    register(name: string, entity: Definition, force?: boolean): Definition\n\n注册工具。\n\n### unregister\n    \n    \n    unregister(name: string): Definition | null\n\n取消注册工具。\n\n实际上，我们将 `registry` 对象的 `register` 和 `unregister` 方法分别挂载为 `Graph` 的两个静态方法 `Graph.registerNodeTool` 和 `Graph.unregisterNodeTool`，看下面使用示例。\n\n### 自定义工具\n\n场景一：继承 `ToolItem` 实现一个工具类，难度较高，要求对[视图基类](https://x6.antv.vision/zh/docs/api/view/view)和 `ToolItem` 类都有所了解，可以参考上述内置工具的源码，这里不展开叙述。\n    \n    \n    Graph.registerNodeTool('button', Button)\n\n场景二：继承已经注册的工具，为继承的工具指定默认选项或者默认样式。我们在 `ToolItem` 基类上提供了一个静态方法 `define` 来快速实现继承并配置默认选项。\n    \n    \n    const MyButton = Button.define<Button.Options>({\n      name: 'my-btn', // 工具名称，可省略，指定后其大驼峰形式同时作为继承的类的类名。\n      markup: ...,\n      onClick({ view }) { ... },\n    })\n    \n    Graph.registerNodeTool('my-btn', MyButton, true)\n\n同时，我们为 `Graph.registerNodeTool` 方法提供了一种快速继承并指定默认选项的实现：\n    \n    \n    Graph.registerNodeTool('my-btn', {\n      'my-btn',         // 工具名称，可省略，指定后其大驼峰形式同时作为继承的类的类名。\n      inherit:'button', // 基类名称，使用已经注册的工具名称。\n      markup: ...,\n      onClick: ...,\n    })\n\n  * [Graph](https://x6.antv.vision/zh/docs/api/graph/graph)\n  * [Grid](https://x6.antv.vision/zh/docs/api/graph/grid)\n  * [Background](https://x6.antv.vision/zh/docs/api/graph/background)\n  * [Snapline](https://x6.antv.vision/zh/docs/api/graph/snapline)\n  * [Scroller](https://x6.antv.vision/zh/docs/api/graph/scroller)\n  * [MiniMap](https://x6.antv.vision/zh/docs/api/graph/minimap)\n  * [History](https://x6.antv.vision/zh/docs/api/graph/history)\n  * [Clipboard](https://x6.antv.vision/zh/docs/api/graph/clipboard)\n  * [Keyboard](https://x6.antv.vision/zh/docs/api/graph/keyboard)\n  * [MouseWheel](https://x6.antv.vision/zh/docs/api/graph/mousewheel)\n  * [Selection](https://x6.antv.vision/zh/docs/api/graph/selecting)\n  * [Interaction](https://x6.antv.vision/zh/docs/api/graph/interaction)\n  * [Transform](https://x6.antv.vision/zh/docs/api/graph/transform)\n  * [View](https://x6.antv.vision/zh/docs/api/graph/view)\n  * [Model](https://x6.antv.vision/zh/docs/api/graph/model)\n  * [Coordinate](https://x6.antv.vision/zh/docs/api/graph/coordinate)\n  * [Other](https://x6.antv.vision/zh/docs/api/graph/other)\n\n\n\n  * [Cell](https://x6.antv.vision/zh/docs/api/model/cell)\n  * [Node](https://x6.antv.vision/zh/docs/api/model/node)\n  * [Edge](https://x6.antv.vision/zh/docs/api/model/edge)\n\n\n\n  * [View](https://x6.antv.vision/zh/docs/api/view/view)\n  * [CellView](https://x6.antv.vision/zh/docs/api/view/cellview)\n  * [NodeView](https://x6.antv.vision/zh/docs/api/view/nodeview)\n  * [EdgeView](https://x6.antv.vision/zh/docs/api/view/edgeview)\n\n\n\n  * [Attr](https://x6.antv.vision/zh/docs/api/registry/attr)\n  * [PortLayout](https://x6.antv.vision/zh/docs/api/registry/port-layout)\n  * [PortLabelLayout](https://x6.antv.vision/zh/docs/api/registry/port-label-layout)\n  * [NodeAnchor](https://x6.antv.vision/zh/docs/api/registry/node-anchor)\n  * [EdgeAnchor](https://x6.antv.vision/zh/docs/api/registry/edge-anchor)\n  * [ConnectionPoint](https://x6.antv.vision/zh/docs/api/registry/connection-point)\n  * [Router](https://x6.antv.vision/zh/docs/api/registry/router)\n  * [Connector](https://x6.antv.vision/zh/docs/api/registry/connector)\n  * [Marker](https://x6.antv.vision/zh/docs/api/registry/marker)\n  * [Highlighter](https://x6.antv.vision/zh/docs/api/registry/highlighter)\n  * [NodeTool](https://x6.antv.vision/zh/docs/api/registry/node-tool)\n  * [EdgeTool](https://x6.antv.vision/zh/docs/api/registry/edge-tool)\n  * [Background](https://x6.antv.vision/zh/docs/api/registry/background)\n  * [Grid](https://x6.antv.vision/zh/docs/api/registry/grid)\n  * [Filter](https://x6.antv.vision/zh/docs/api/registry/filter)\n\n\n\n  * [Menu](https://x6.antv.vision/zh/docs/api/ui/menu)\n  * [Dropdown](https://x6.antv.vision/zh/docs/api/ui/dropdown)\n  * [ContextMenu](https://x6.antv.vision/zh/docs/api/ui/contextmenu)\n  * [Menubar](https://x6.antv.vision/zh/docs/api/ui/menubar)\n  * [Toolbar](https://x6.antv.vision/zh/docs/api/ui/toolbar)\n  * [SplitBox](https://x6.antv.vision/zh/docs/api/ui/splitbox)\n  * [ScrollBox](https://x6.antv.vision/zh/docs/api/ui/scrollbox)\n  * [AutoScrollBox](https://x6.antv.vision/zh/docs/api/ui/auto-scrollbox)\n  * [ColorPicker](https://x6.antv.vision/zh/docs/api/ui/color-picker)\n\n\n\n  * Graph __\n\n    * [Graph](https://x6.antv.vision/zh/docs/api/graph/graph)\n    * [Grid](https://x6.antv.vision/zh/docs/api/graph/grid)\n    * [Background](https://x6.antv.vision/zh/docs/api/graph/background)\n    * [Snapline](https://x6.antv.vision/zh/docs/api/graph/snapline)\n    * [Scroller](https://x6.antv.vision/zh/docs/api/graph/scroller)\n    * [MiniMap](https://x6.antv.vision/zh/docs/api/graph/minimap)\n    * [History](https://x6.antv.vision/zh/docs/api/graph/history)\n    * [Clipboard](https://x6.antv.vision/zh/docs/api/graph/clipboard)\n    * [Keyboard](https://x6.antv.vision/zh/docs/api/graph/keyboard)\n    * [MouseWheel](https://x6.antv.vision/zh/docs/api/graph/mousewheel)\n    * [Selection](https://x6.antv.vision/zh/docs/api/graph/selecting)\n    * [Interaction](https://x6.antv.vision/zh/docs/api/graph/interaction)\n    * [Transform](https://x6.antv.vision/zh/docs/api/graph/transform)\n    * [View](https://x6.antv.vision/zh/docs/api/graph/view)\n    * [Model](https://x6.antv.vision/zh/docs/api/graph/model)\n    * [Coordinate](https://x6.antv.vision/zh/docs/api/graph/coordinate)\n    * [Other](https://x6.antv.vision/zh/docs/api/graph/other)\n  * Model __\n\n    * [Cell](https://x6.antv.vision/zh/docs/api/model/cell)\n    * [Node](https://x6.antv.vision/zh/docs/api/model/node)\n    * [Edge](https://x6.antv.vision/zh/docs/api/model/edge)\n  * View __\n\n    * [View](https://x6.antv.vision/zh/docs/api/view/view)\n    * [CellView](https://x6.antv.vision/zh/docs/api/view/cellview)\n    * [NodeView](https://x6.antv.vision/zh/docs/api/view/nodeview)\n    * [EdgeView](https://x6.antv.vision/zh/docs/api/view/edgeview)\n  * Registry __\n\n    * [Attr](https://x6.antv.vision/zh/docs/api/registry/attr)\n    * [PortLayout](https://x6.antv.vision/zh/docs/api/registry/port-layout)\n    * [PortLabelLayout](https://x6.antv.vision/zh/docs/api/registry/port-label-layout)\n    * [NodeAnchor](https://x6.antv.vision/zh/docs/api/registry/node-anchor)\n    * [EdgeAnchor](https://x6.antv.vision/zh/docs/api/registry/edge-anchor)\n    * [ConnectionPoint](https://x6.antv.vision/zh/docs/api/registry/connection-point)\n    * [Router](https://x6.antv.vision/zh/docs/api/registry/router)\n    * [Connector](https://x6.antv.vision/zh/docs/api/registry/connector)\n    * [Marker](https://x6.antv.vision/zh/docs/api/registry/marker)\n    * [Highlighter](https://x6.antv.vision/zh/docs/api/registry/highlighter)\n    * [NodeTool](https://x6.antv.vision/zh/docs/api/registry/node-tool)\n    * [EdgeTool](https://x6.antv.vision/zh/docs/api/registry/edge-tool)\n    * [Background](https://x6.antv.vision/zh/docs/api/registry/background)\n    * [Grid](https://x6.antv.vision/zh/docs/api/registry/grid)\n    * [Filter](https://x6.antv.vision/zh/docs/api/registry/filter)\n  * UI Components __\n\n    * [Menu](https://x6.antv.vision/zh/docs/api/ui/menu)\n    * [Dropdown](https://x6.antv.vision/zh/docs/api/ui/dropdown)\n    * [ContextMenu](https://x6.antv.vision/zh/docs/api/ui/contextmenu)\n    * [Menubar](https://x6.antv.vision/zh/docs/api/ui/menubar)\n    * [Toolbar](https://x6.antv.vision/zh/docs/api/ui/toolbar)\n    * [SplitBox](https://x6.antv.vision/zh/docs/api/ui/splitbox)\n    * [ScrollBox](https://x6.antv.vision/zh/docs/api/ui/scrollbox)\n    * [AutoScrollBox](https://x6.antv.vision/zh/docs/api/ui/auto-scrollbox)\n    * [ColorPicker](https://x6.antv.vision/zh/docs/api/ui/color-picker)\n\n\n\n🇨🇳AntV 系列网站部署在 gh-pages 上，若访问速度不佳，可以前往 站点。\n\n不再提醒立即前往\n"
}
